<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABVAKgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        3PGXjjR/h5oUmqa9qmn6NpsTKj3V7cLBCrMcAFmIGT6Vx6/td/Ctjx8RvBJPoNYg/wDiq8J/4LbqH/Ya
        uVYZB17T+D3/AHhr41+D3/BMTX/id8PNB8U2t94VhtNcs476GKV5VlVHGQG2xEbvXBIr6/Jshy7EYB43
        H4n2XvuCXLe9oxl/7cfM5pm+Oo4z6rgqKqe6pPW1rtr9D9SLf9qH4cXf+p8c+FZf9zUY2/kauR/tA+CZ
        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
</value>
  </data>
</root>